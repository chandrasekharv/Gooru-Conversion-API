<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd          
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
            http://www.springframework.org/schema/jee
            http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd ">

	<bean id="resourceWebUrlValidator"
		class="org.ednovo.gooru.application.converter.ResourceWebUrlValidator" />

	<bean id="contentS3Service" class="org.jets3t.service.impl.rest.httpclient.RestS3Service">
		<constructor-arg ref="contentAwsCredentials" />
	</bean>

	<bean id="contentAwsCredentials" class="org.jets3t.service.security.AWSCredentials">
		<constructor-arg value="${s3.accessKey}" />
		<constructor-arg value="${s3.secureKey}" />
	</bean>

	<bean id="s3Service" class="org.jets3t.service.impl.rest.httpclient.RestS3Service">
		<constructor-arg ref="awsCredentials" />
	</bean>

	<bean id="awsCredentials" class="org.jets3t.service.security.AWSCredentials">
		<constructor-arg value="${s3.accessKey}" />
		<constructor-arg value="${s3.secureKey}" />
	</bean>

	<bean id="KafkaProperties" class="org.ednovo.gooru.kafka.KafkaProperties">
		<property name="kafkaIp" value="${insights.kafa.ip}"></property>
		<property name="kafkaConversionTopic" value="${conversion.kafka.topic}"></property>
	</bean>
	
	<bean id="kafkaConsumer" class = "org.ednovo.gooru.kafka.KafkaConsumer">
	    <constructor-arg index="0" value="${conversion.kafka.topic}" />
	    <constructor-arg index="1" value="${insights.kafa.ip}" />
	</bean>

	<bean id="conversionJobPollThread" class="java.lang.Thread" init-method="start" destroy-method="interrupt">
		<constructor-arg ref="kafkaConsumer" />
	</bean>

	
	<jee:jndi-lookup id="jndisetting" jndi-name="java:comp/env/configSettings"
		expected-type="java.lang.String" />
	<bean
		class="org.springframework.core.LocalVariableTableParameterNameDiscoverer" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:///#{jndisetting}"></property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
</beans>