<?xml version="1.0" encoding="UTF-8"?>
		<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
			<modelVersion>4.0.0</modelVersion>
			<groupId>org.ednovo.gooru</groupId>
			<artifactId>gooru</artifactId>
			<packaging>pom</packaging>
			<version>1.0</version>
			<name>Gooru</name>
			<url>http://www.goorulearning.org</url>
			<prerequisites>
				<maven>2.5</maven>
			</prerequisites>
			<licenses>
				<license>
					<name/>
					<url/>
				</license>
			</licenses>
			<scm>
				<connection/>
				<developerConnection/>
				<url/>
			</scm>
			<issueManagement>
				<system/>
				<url/>
			</issueManagement>
			<developers>
				<developer>
					<id/>
					<name/>
					<email/>
					<timezone/>
				</developer>
			</developers>
			<build>
				<directory>${my.build.directory}</directory>
				<defaultGoal>install</defaultGoal>
				<plugins>
					<plugin>
						<artifactId>maven-eclipse-plugin</artifactId>
						<version>2.8</version>
						<configuration>
							<additionalProjectnatures>
								<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
							</additionalProjectnatures>
							<additionalBuildcommands>
								<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
							</additionalBuildcommands>
							<downloadSources>true</downloadSources>
							<downloadJavadocs>true</downloadJavadocs>
							<!-- <wtpversion>1.5</wtpversion> -->
						</configuration>
					</plugin>
		<!--			<plugin>
						<groupId>com.googlecode.flyway</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<version>2.2.1</version>
						<configuration>
							<user>root</user>
							<password>password</password>
							<url><![CDATA[jdbc:mysql://localhost/gooru_local?useUnicode=true&amp;characterEncoding=utf-8]]></url>
							<driver>com.mysql.jdbc.Driver</driver>
							<locations><list>web-app/target/classes/db/migration</list></locations>
						</configuration>
					</plugin> -->
					<plugin>
						<artifactId>maven-idea-plugin</artifactId>
						<version>2.1</version>
						<configuration>
							<downloadSources>true</downloadSources>
							<downloadJavadocs>true</downloadJavadocs>
							<dependenciesAsLibraries>true</dependenciesAsLibraries>
							<useFullNames>false</useFullNames>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
				<id>releases</id>
				<name>Releases</name>
				<url>http://devl3.goorulearning.org/artifactory/repo</url>
				</repository>
		<!--		<repository>
				  <id>spy</id>
				  <name>Spy Repository</name>
				  <layout>default</layout>
				  <url>http://files.couchbase.com/maven2/</url>
				  <snapshots>
				    <enabled>false</enabled>
				  </snapshots>
				</repository>-->
			</repositories>
			<pluginRepositories/>
			<dependencies>
				<dependency>
					<groupId>${jdbc.groupId}</groupId>
					<artifactId>${jdbc.artifactId}</artifactId>
					<version>${jdbc.version}</version>
				</dependency>
				<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>1.0</version>
				</dependency>
				<dependency>
				<groupId>org.apache.tika</groupId>
					<artifactId>tika-parsers</artifactId>
				<version>1.0</version>
				</dependency>
				<dependency>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
					<version>1.2.16</version>
					<type>jar</type>
					<scope>compile</scope>
					<exclusions>
						<exclusion>
							<artifactId>jms</artifactId>
							<groupId>javax.jms</groupId>
						</exclusion>
						<exclusion>
							<groupId>com.sun.jmx</groupId>
							<artifactId>jmxri</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.sun.jdmk</groupId>
							<artifactId>jmxtools</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>1.3</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.velocity</groupId>
			    <artifactId>velocity</artifactId>
			    <version>1.7</version>
				<scope>compile</scope>
		    </dependency>
		    <dependency>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
					<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-hibernate4</artifactId>
				<version>2.1.0</version>
			</dependency>  	
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.9</version>
				</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>1.9.9</version>
			</dependency>
			</dependencies>
			<reporting>
				<plugins>
					<plugin>
						<artifactId>maven-changes-plugin</artifactId>
						 <version>3.0.4</version>
					</plugin>
					<plugin>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>3.0.4</version>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>3.0.4</version>
					</plugin>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.0.4</version>
					</plugin>
					<plugin>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>3.0.4</version>
					</plugin>
					<plugin>
						<artifactId>maven-pmd-plugin</artifactId>
						<configuration>
							<linkXref>true</linkXref>
							<!-- <targetJdk>1.5</targetJdk> -->
						</configuration>
						<version>3.0.4</version>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>3.0.4</version>
					</plugin>
				</plugins>
			</reporting>
			<profiles>
				<!-- ================= Production Settings Profile ================= -->
				<!-- Use "-P prod" when you want to use the settings in this profile -->
				<!-- =============================================================== -->
                                <profile>
                                        <id>conversion</id>
                                        <properties>
                                                <env>api</env>
                                        </properties>
                                        <modules>
					  <module>conversion-app</module>
                                        </modules>
                                </profile>

			</profiles>
	<properties>
		<env>local</env>
		<!-- Application settings -->
		<copyright.year>2008</copyright.year>
		<dao.framework>hibernate</dao.framework>
		<web.framework>spring</web.framework>
		<amp.genericCore>true</amp.genericCore>
		<amp.fullSource>false</amp.fullSource>
		<!-- Framework dependency versions -->
		<org.springframework.version>3.1.2.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.1.RELEASE</org.springframework.security.version>
		<spring.security.oauth.version>1.0.0.RC2</spring.security.oauth.version>

		<!-- Testing dependency versions -->
		<jmock.version>2.4.0</jmock.version>
		<jsp.version>2.0</jsp.version>
		<junit.version>4.4</junit.version>
		<servlet.version>2.4</servlet.version>		
		<!-- WebTest dependency versions  -->
		<webtest.version>R_1702</webtest.version>
		<!-- Cargo settings -->
		<cargo.container>tomcat5x</cargo.container>
		<cargo.container.base>${env.CATALINA_BASE}</cargo.container.base>
		<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.14/bin/apache-tomcat-6.0.14.zip</cargo.container.url>
		<cargo.host>localhost</cargo.host>
		<cargo.port>8081</cargo.port>
		<cargo.wait>false</cargo.wait>
		<!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
		<jdbc.groupId>mysql</jdbc.groupId>
		<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
		<jdbc.version>5.1.18</jdbc.version>
		<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
		<jdbc.url>
			<![CDATA[jdbc:mysql://localhost/gooru?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]>
		</jdbc.url>
		<jdbc.username>root</jdbc.username>
		<jdbc.password>admin</jdbc.password>
		<my.build.directory>target</my.build.directory>
    	<maven.build.timestamp.format>yyMMddHH</maven.build.timestamp.format>
		<buildNumber>${maven.build.timestamp}</buildNumber>
 		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- This is the webapp container to which the WARs are deployed to -->
		<webapp.container.base>${env.CATALINA_BASE}</webapp.container.base>
	</properties>
</project>
